<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8uCsLGM+Wv1VeJwGfet+nsrCRhaS1wLXNNnBwIc0jaCDsKsInNUzExOUvN0eF0C6BdAugXQLoF0C6BdA
        ug9RsLiGtBc5xs0NBLnE7AANpSZy4vYiZnKFn4lZOLZtRXtHFkGojsMnH4efBV9/GfLR6rbDYDLvXPT3
        WcBbUNir1oygICAgICAgICAgICCP4zYn01cLyNzJrWbKywk7A7c4dh8LLtav12+HBHvYai7x481UYxYh
        VdJdwZ7RCPtxAkgfeZtHhcdqsbeKor6Sqb2BuUaxrCKXUlDyLoZF0Mi6GRdDIuhkXQyLoZF0MkrxdxCq
        6uziz2eE/blBBI+6zafGw7VGuYqijrKZZwNyvWdIWvizifTUIvG3PmtZ0r7GTtDdzR2Dxuq67fruceC2
        s4ai1w480gXFIEBAQEBAQEBAQEBAQEBAQcTDWKdHV3M0Dc8/bZ0Jb9rm7fG660Xq6OEuNzD27nihCsJZ
        JBtpqkjg2ZgP9bLflUqnHT80IVezY+Wr1RusybYQj92Jko4xys+T80rvTi7co1WAuxw1cmfFSuZ71HUf
        hic8c23XSL9ufjDjOGux8svh/YFX/dKn/p5v0X12tHOPV89hc/1n0feDFSuf7tHUfiicwc3WXzN+3Hxh
        9Rhrs/LLrUeTbCEnvRMiHGSVnyZnFc6sXbh2pwF6eOiSYNySDbU1JPFsLAP633/KuFWOn5YSaNmx81Xo
        muBcU6OksYYG54+2/py37HO2eFlFrvV18ZTbeHt2/DDtrk7CAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAg+enZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIG
        nZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIG
        nZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIGnZ12+YIPxpT0mkeG
        MaC52po1C5tqGvedneu2UPH0GDXljZBC5zH+65sbi3W4sAuBqJcLAbTccQmUD6PwLMM29PJ0gSAIXlwD
        XZpuALixtt4jiE0H2hxeldHpDGyNpcGM0zmROkfZrrMa+xdqe06ttxa687o8VGAKhji11LNcSGIEQSFr
        pgSMxpAs52o6gndHp+L0zc3Ph0Yc0uu9paG2dI3NcSOi+8MnROvopoOdoxwHIL3KA0Y4DkEygNGOA5BM
        oDRjgOQTKA0Y4DkEygNGOA5BMoDRjgOQTKA0Y4DkEygNGOA5BMoDRjgOQTKA0Y4DkEygNGOA5BMoDRjg
        OQTKA0Y4DkEygNGOA5BMoGMxvAcgmUDOYOA5BMoDMbwHIJlAxmt4N9F7uwGY3gOQXmUDOjHAcgmUD6Ry
        Frg5ps5pDmng4G4PML147bsZn3uImNANo2t91kRzAYzqziLRjWC3WSdeq3mT1qw4Va1rWCHoRua6O8pz
        w5jnPZnOAGcA6WW4sLh42ZoKZDbo8Z3xGZ7WfSTE3Jll0OtgZ0oQQ2QjWWk7Cb67BN0bJxzfdzhTxAyB
        0cnTms6me+SR0YsRmnOmf0xrAtvuT5ujn4Uw5p6eGm0LWR02d7PZ7i6Nr3vc9pJ94HOZt2aIW2kL2IyH
        IXrwQEBAQEBAQEBAQEBBsUNW6F+eyxOaR0hcAnW024tcGuHa0XuLgh0f7f139lpbdUQgN3W1Du+XC58y
        estxiOa1pp6dzWEloMfRF9wGwDWe9Mh8pMNZ2YDTwAMDg2zLDpix5bRw7UyHubDxdfNp6aM26JZEA5jw
        SQ4Hbe5GrZ0QmQ2jjfNuZGBcu2EkFz886++9uGcTr1Wbo+T8aJCLaKMbdmkAF4jEQADqbmnZfcNYtdN0
        crCFWZpXSuADn2uBe2poaNvY0f8AzYvXjXQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBB//2Q==
</value>
  </data>
</root>